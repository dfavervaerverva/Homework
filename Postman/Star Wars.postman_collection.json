{
	"info": {
		"_postman_id": "29f3d9d4-d53b-4d8a-9e9b-a8501a28a863",
		"name": "Star Wars",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32306042"
	},
	"item": [
		{
			"name": "People",
			"item": [
				{
					"name": "Darth Vader",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"name\")).to.include(\"Darth Vader\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"height\")).to.include(\"202\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"mass\")).to.include(\"136\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"hair_color\")).to.include(\"none\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"skin_color\")).to.include(\"white\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"eye_color\")).to.include(\"yellow\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"birth_year\")).to.include(\"41.9BBY\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"gender\")).to.include(\"male\");\r",
									"});\r",
									"});\r",
									"});\r",
									"});\r",
									"});\r",
									"});\r",
									"});\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/people/4/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"people",
								"4",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Luke Skywalker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"mass\")).to.include(\"77\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"eye_color\")).to.include(\"blue\");\r",
									"});\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/people/1/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"people",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "R2-D2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"mass\")).to.include(\"32\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"eye_color\")).to.include(\"red\");\r",
									"});\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/people/3/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"people",
								"3",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Species",
			"item": [
				{
					"name": "Wookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"eye_colors\")).to.include(\"blue, green, yellow, brown, golden, red\");\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/species/3/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"species",
								"3",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Human",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"eye_colors\")).to.include(\"brown, blue, green, hazel, grey, amber\");\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/species/1/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"species",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Yoda's species",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"eye_colors\")).to.include(\"brown, green, yellow\");\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/species/6/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"species",
								"6",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Starships",
			"item": [
				{
					"name": "Death Star",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"max_atmosphering_speed\")).to.include(\"n/a\");\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/starships/9/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"starships",
								"9",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "CR90 corvette",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"max_atmosphering_speed\")).to.include(\"950\");\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/starships/2/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"starships",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Star Destroyer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"max_atmosphering_speed\")).to.include(\"975\");\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/starships/3/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"starships",
								"3",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Planets",
			"item": [
				{
					"name": "Tatooine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"climate\")).to.include(\"arid\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"terrain\")).to.include(\"desert\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"name\")).to.include(\"Tatooine\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/planets/1/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"planets",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Alderaan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"name\")).to.include(\"Alderaan\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"climate\")).to.include(\"temperate\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"terrain\")).to.include(\"grasslands, mountains\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/planets/2/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"planets",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Hoth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"name\")).to.include(\"Hoth\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"climate\")).to.include(\"frozen\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"terrain\")).to.include(\"tundra, ice caves, mountain ranges\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/planets/4/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"planets",
								"4",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Films",
			"item": [
				{
					"name": "A New Hope",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"title\")).to.include(\"A New Hope\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"episode_id\")).to.include(\"4\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"director\")).to.include(\"George Lucas\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/films/1/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"films",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "The Empire Strikes Back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"title\")).to.include(\"The Empire Strikes Back\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"episode_id\")).to.include(\"5\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"director\")).to.include(\"Irvin Kershner\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/films/2/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"films",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Return of the Jedi",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"title\")).to.include(\"Return of the Jedi\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"episode_id\")).to.include(\"6\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"director\")).to.include(\"Richard Marquand\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/films/3/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"films",
								"3",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Vehicles",
			"item": [
				{
					"name": "Sand Crawler",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"max_atmosphering_speed\")).to.include(\"30\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"name\")).to.include(\"Sand Crawler\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"model\")).to.include(\"Digger Crawler\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/vehicles/4/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"vehicles",
								"4",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "T-16 skyhopper",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"max_atmosphering_speed\")).to.include(\"1200\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"name\")).to.include(\"T-16 skyhopper\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"model\")).to.include(\"T-16 skyhopper\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/vehicles/6/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"vehicles",
								"6",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "X-34 landspeeder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"max_atmosphering_speed\")).to.include(\"250\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"name\")).to.include(\"X-34 landspeeder\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text(\"model\")).to.include(\"X-34 landspeeder\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/vehicles/7/",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"vehicles",
								"7",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}